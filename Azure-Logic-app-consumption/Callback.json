{
    "definition": {
        "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
        "contentVersion": "1.0.0.0",
        "triggers": {
            "api": {
                "type": "Request",
                "kind": "Http",
                "inputs": {
                    "schema": {
                        "type": "object",
                        "properties": {
                            "requestId": {
                                "type": "string"
                            },
                            "requestStatus": {
                                "type": "string"
                            },
                            "state": {
                                "type": "string"
                            },
                            "error": {
                                "type": "object",
                                "properties": {
                                    "code": {
                                        "type": "string"
                                    },
                                    "message": {
                                        "type": "string"
                                    }
                                }
                            },
                            "verifiedCredentialsData": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "issuer": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "claims": {
                                            "type": "object",
                                            "properties": {
                                                "displayName": {
                                                    "type": "string"
                                                },
                                                "preferredLanguage": {
                                                    "type": "string"
                                                },
                                                "revocationId": {
                                                    "type": "string"
                                                },
                                                "photo": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "credentialState": {
                                            "type": "object",
                                            "properties": {
                                                "revocationStatus": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "domainValidation": {
                                            "type": "object",
                                            "properties": {
                                                "url": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "expirationDate": {
                                            "type": "string"
                                        },
                                        "issuanceDate": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "issuer",
                                        "type",
                                        "claims",
                                        "credentialState",
                                        "domainValidation",
                                        "expirationDate",
                                        "issuanceDate"
                                    ]
                                }
                            },
                            "subject": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "actions": {
            "Condition": {
                "type": "If",
                "expression": {
                    "and": [
                        {
                            "not": {
                                "equals": [
                                    "@triggerOutputs()?['headers']['api-key']",
                                    "@parameters('ApiKey')"
                                ]
                            }
                        }
                    ]
                },
                "actions": {
                    "Invalid_api-key_response": {
                        "type": "Response",
                        "kind": "Http",
                        "inputs": {
                            "statusCode": 401,
                            "body": "Invalid API key"
                        }
                    },
                    "Terminate": {
                        "type": "Terminate",
                        "inputs": {
                            "runStatus": "Failed",
                            "runError": {
                                "code": "401",
                                "message": "Invalid api-key"
                            }
                        },
                        "runAfter": {
                            "Invalid_api-key_response": [
                                "Succeeded"
                            ]
                        }
                    }
                },
                "else": {
                    "actions": {}
                },
                "runAfter": {}
            },
            "Initialize_variables": {
                "type": "InitializeVariable",
                "inputs": {
                    "variables": [
                        {
                            "name": "claimsAsString",
                            "type": "string"
                        },
                        {
                            "name": "ErrorMessage",
                            "type": "string"
                        }
                    ]
                },
                "runAfter": {
                    "Condition": [
                        "Succeeded"
                    ]
                }
            },
            "If_presentation_verified": {
                "type": "If",
                "expression": {
                    "and": [
                        {
                            "equals": [
                                "@triggerBody()?['requestStatus']",
                                "presentation_verified"
                            ]
                        }
                    ]
                },
                "actions": {
                    "Set_variable": {
                        "type": "SetVariable",
                        "inputs": {
                            "name": "claimsAsString",
                            "value": "@string(setProperty(triggerBody()?['verifiedCredentialsData']?[0]?['claims'], 'photo', ''))"
                        }
                    }
                },
                "else": {
                    "actions": {}
                },
                "runAfter": {
                    "Initialize_variables": [
                        "Succeeded"
                    ]
                }
            },
            "Update_state_table": {
                "type": "ApiConnection",
                "inputs": {
                    "host": {
                        "connection": {
                            "name": "@parameters('$connections')['azuretables']['connectionId']"
                        }
                    },
                    "method": "put",
                    "body": {
                        "status": "@{triggerBody()?['requestStatus']}",
                        "claims": "@{variables('claimsAsString')}",
                        "error": "@variables('ErrorMessage')"
                    },
                    "path": "/v2/storageAccounts/@{encodeURIComponent(encodeURIComponent(parameters('StorageAccountName')))}/tables/@{encodeURIComponent('VerifiedIdState')}/entities(PartitionKey='@{encodeURIComponent('key')}',RowKey='@{encodeURIComponent(triggerBody()?['state'])}')"
                },
                "runAfter": {
                    "If_contains_error": [
                        "Succeeded"
                    ]
                }
            },
            "Response": {
                "type": "Response",
                "kind": "Http",
                "inputs": {
                    "statusCode": 200
                },
                "runAfter": {
                    "Update_state_table": [
                        "Succeeded"
                    ]
                }
            },
            "If_contains_error": {
                "type": "If",
                "expression": {
                    "or": [
                        {
                            "equals": [
                                "@triggerBody()?['requestStatus']",
                                "issuance_error"
                            ]
                        },
                        {
                            "equals": [
                                "@triggerBody()?['requestStatus']",
                                "presentation_error"
                            ]
                        }
                    ]
                },
                "actions": {
                    "Set_error_message": {
                        "type": "SetVariable",
                        "inputs": {
                            "name": "ErrorMessage",
                            "value": "@{triggerBody()?['error']?['code']}: @{triggerBody()?['error']?['message']}"
                        }
                    }
                },
                "else": {
                    "actions": {}
                },
                "runAfter": {
                    "If_presentation_verified": [
                        "Succeeded"
                    ]
                }
            }
        },
        "outputs": {},
        "parameters": {
            "ApiKey": {
                "defaultValue": "",
                "type": "String"
            },
            "StorageAccountName": {
                "defaultValue": "",
                "type": "String"
            },
            "$connections": {
                "type": "Object",
                "defaultValue": {}
            }
        }
    },
    "parameters": {
        "$connections": {
            "type": "Object",
            "value": {
                "azuretables": {
                    "id": "",
                    "connectionId": "",
                    "connectionName": "azuretables",
                    "connectionProperties": {
                        "authentication": {
                            "type": "ManagedServiceIdentity",
                            "identity": ""
                        }
                    }
                }
            }
        }
    }
}